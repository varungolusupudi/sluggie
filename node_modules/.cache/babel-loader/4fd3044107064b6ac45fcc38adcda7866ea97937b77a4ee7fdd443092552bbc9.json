{"ast":null,"code":"// src/devBrowser.ts\nvar DEV_BROWSER_SSO_JWT_PARAMETER = \"__dev_session\";\nvar DEV_BROWSER_JWT_MARKER = \"__clerk_db_jwt\";\nvar DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\nfunction setDevBrowserJWTInURL(url, jwt, asQueryParam) {\n  const resultURL = new URL(url);\n  const jwtFromHash = extractDevBrowserJWTFromURLHash(resultURL);\n  const jwtFromSearch = extractDevBrowserJWTFromURLSearchParams(resultURL);\n  const jwtToSet = jwtFromHash || jwtFromSearch || jwt;\n  if (jwtToSet) {\n    if (asQueryParam) {\n      resultURL.searchParams.append(DEV_BROWSER_SSO_JWT_PARAMETER, jwtToSet);\n      resultURL.searchParams.append(DEV_BROWSER_JWT_MARKER, jwtToSet);\n    } else {\n      resultURL.hash = resultURL.hash + `${DEV_BROWSER_JWT_MARKER}[${jwtToSet}]`;\n    }\n  }\n  return resultURL;\n}\nfunction extractDevBrowserJWTFromHash(hash) {\n  const matches = hash.match(DEV_BROWSER_JWT_MARKER_REGEXP);\n  return matches ? matches[1] : \"\";\n}\nfunction extractDevBrowserJWTFromURLHash(url) {\n  const jwt = extractDevBrowserJWTFromHash(url.hash);\n  url.hash = url.hash.replace(DEV_BROWSER_JWT_MARKER_REGEXP, \"\");\n  if (url.href.endsWith(\"#\")) {\n    url.hash = \"\";\n  }\n  return jwt;\n}\nfunction extractDevBrowserJWTFromURLSearchParams(url) {\n  const jwtFromDevSession = url.searchParams.get(DEV_BROWSER_SSO_JWT_PARAMETER);\n  url.searchParams.delete(DEV_BROWSER_SSO_JWT_PARAMETER);\n  const jwtFromClerkDbJwt = url.searchParams.get(DEV_BROWSER_JWT_MARKER);\n  url.searchParams.delete(DEV_BROWSER_JWT_MARKER);\n  return jwtFromDevSession || jwtFromClerkDbJwt || \"\";\n}\nexport { DEV_BROWSER_SSO_JWT_PARAMETER, DEV_BROWSER_JWT_MARKER, setDevBrowserJWTInURL, extractDevBrowserJWTFromURLHash, extractDevBrowserJWTFromURLSearchParams };","map":{"version":3,"names":["DEV_BROWSER_SSO_JWT_PARAMETER","DEV_BROWSER_JWT_MARKER","DEV_BROWSER_JWT_MARKER_REGEXP","setDevBrowserJWTInURL","url","jwt","asQueryParam","resultURL","URL","jwtFromHash","extractDevBrowserJWTFromURLHash","jwtFromSearch","extractDevBrowserJWTFromURLSearchParams","jwtToSet","searchParams","append","hash","extractDevBrowserJWTFromHash","matches","match","replace","href","endsWith","jwtFromDevSession","get","delete","jwtFromClerkDbJwt"],"sources":["/Users/varungolusupudi/slugtrition/node_modules/@clerk/shared/src/devBrowser.ts"],"sourcesContent":["export const DEV_BROWSER_SSO_JWT_PARAMETER = '__dev_session';\nexport const DEV_BROWSER_JWT_MARKER = '__clerk_db_jwt';\nconst DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\n\n// Sets the dev_browser JWT in the hash or the search\nexport function setDevBrowserJWTInURL(url: URL, jwt: string, asQueryParam: boolean): URL {\n  const resultURL = new URL(url);\n\n  const jwtFromHash = extractDevBrowserJWTFromURLHash(resultURL);\n  const jwtFromSearch = extractDevBrowserJWTFromURLSearchParams(resultURL);\n  // Existing jwt takes precedence\n  const jwtToSet = jwtFromHash || jwtFromSearch || jwt;\n\n  if (jwtToSet) {\n    if (asQueryParam) {\n      // Temporarily add the dev browser jwt to both the `__clerk_db_jwt` and `__dev_session`\n      resultURL.searchParams.append(DEV_BROWSER_SSO_JWT_PARAMETER, jwtToSet);\n      resultURL.searchParams.append(DEV_BROWSER_JWT_MARKER, jwtToSet);\n    } else {\n      resultURL.hash = resultURL.hash + `${DEV_BROWSER_JWT_MARKER}[${jwtToSet}]`;\n    }\n  }\n\n  return resultURL;\n}\n\nfunction extractDevBrowserJWTFromHash(hash: string): string {\n  const matches = hash.match(DEV_BROWSER_JWT_MARKER_REGEXP);\n  return matches ? matches[1] : '';\n}\n\n/**\n * Extract & strip existing jwt from hash\n * Side effect: Removes dev browser from the url hash\n **/\nexport function extractDevBrowserJWTFromURLHash(url: URL) {\n  const jwt = extractDevBrowserJWTFromHash(url.hash);\n  url.hash = url.hash.replace(DEV_BROWSER_JWT_MARKER_REGEXP, '');\n  if (url.href.endsWith('#')) {\n    url.hash = '';\n  }\n\n  return jwt;\n}\n\n/**\n * Extract & strip existing jwt from search params\n * Side effect: Removes dev browser from the search params\n **/\nexport function extractDevBrowserJWTFromURLSearchParams(url: URL) {\n  const jwtFromDevSession = url.searchParams.get(DEV_BROWSER_SSO_JWT_PARAMETER);\n  url.searchParams.delete(DEV_BROWSER_SSO_JWT_PARAMETER);\n\n  const jwtFromClerkDbJwt = url.searchParams.get(DEV_BROWSER_JWT_MARKER);\n  url.searchParams.delete(DEV_BROWSER_JWT_MARKER);\n\n  return jwtFromDevSession || jwtFromClerkDbJwt || '';\n}\n"],"mappings":";AAAO,IAAMA,6BAAA,GAAgC;AACtC,IAAMC,sBAAA,GAAyB;AACtC,IAAMC,6BAAA,GAAgC;AAG/B,SAASC,sBAAsBC,GAAA,EAAUC,GAAA,EAAaC,YAAA,EAA4B;EACvF,MAAMC,SAAA,GAAY,IAAIC,GAAA,CAAIJ,GAAG;EAE7B,MAAMK,WAAA,GAAcC,+BAAA,CAAgCH,SAAS;EAC7D,MAAMI,aAAA,GAAgBC,uCAAA,CAAwCL,SAAS;EAEvE,MAAMM,QAAA,GAAWJ,WAAA,IAAeE,aAAA,IAAiBN,GAAA;EAEjD,IAAIQ,QAAA,EAAU;IACZ,IAAIP,YAAA,EAAc;MAEhBC,SAAA,CAAUO,YAAA,CAAaC,MAAA,CAAOf,6BAAA,EAA+Ba,QAAQ;MACrEN,SAAA,CAAUO,YAAA,CAAaC,MAAA,CAAOd,sBAAA,EAAwBY,QAAQ;IAChE,OAAO;MACLN,SAAA,CAAUS,IAAA,GAAOT,SAAA,CAAUS,IAAA,GAAO,GAAGf,sBAAsB,IAAIY,QAAQ;IACzE;EACF;EAEA,OAAON,SAAA;AACT;AAEA,SAASU,6BAA6BD,IAAA,EAAsB;EAC1D,MAAME,OAAA,GAAUF,IAAA,CAAKG,KAAA,CAAMjB,6BAA6B;EACxD,OAAOgB,OAAA,GAAUA,OAAA,CAAQ,CAAC,IAAI;AAChC;AAMO,SAASR,gCAAgCN,GAAA,EAAU;EACxD,MAAMC,GAAA,GAAMY,4BAAA,CAA6Bb,GAAA,CAAIY,IAAI;EACjDZ,GAAA,CAAIY,IAAA,GAAOZ,GAAA,CAAIY,IAAA,CAAKI,OAAA,CAAQlB,6BAAA,EAA+B,EAAE;EAC7D,IAAIE,GAAA,CAAIiB,IAAA,CAAKC,QAAA,CAAS,GAAG,GAAG;IAC1BlB,GAAA,CAAIY,IAAA,GAAO;EACb;EAEA,OAAOX,GAAA;AACT;AAMO,SAASO,wCAAwCR,GAAA,EAAU;EAChE,MAAMmB,iBAAA,GAAoBnB,GAAA,CAAIU,YAAA,CAAaU,GAAA,CAAIxB,6BAA6B;EAC5EI,GAAA,CAAIU,YAAA,CAAaW,MAAA,CAAOzB,6BAA6B;EAErD,MAAM0B,iBAAA,GAAoBtB,GAAA,CAAIU,YAAA,CAAaU,GAAA,CAAIvB,sBAAsB;EACrEG,GAAA,CAAIU,YAAA,CAAaW,MAAA,CAAOxB,sBAAsB;EAE9C,OAAOsB,iBAAA,IAAqBG,iBAAA,IAAqB;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}